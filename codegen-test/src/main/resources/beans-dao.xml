<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	   xmlns:tx="http://www.springframework.org/schema/tx"
	   xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans-3.2.xsd


	http://www.springframework.org/schema/tx
	http://www.springframework.org/schema/tx/spring-tx-3.2.xsd">
	<!-- 1. 数据源 : DriverManagerDataSource -->
	<!-- JDBC连接 -->
	<!-- 
	<bean id="dataSource"
		class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName" value="${jdbc.driverClassName}" />
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
	</bean
	 -->
	<!-- 数据源配置,使用应用内的c3p0数据库连接池 -->  
	<!--  
    <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close">  
        <property name="driverClass" value="${jdbc.driverClassName}"/>  
        <property name="jdbcUrl" value="${jdbc.url}"/>  
        <property name="user" value="${jdbc.username}"/>  
        <property name="password" value="${jdbc.password}"/>  
        <property name="initialPoolSize" value="5"/>  
        <property name="minPoolSize" value="5"/>  
        <property name="maxPoolSize" value="100"/>  
        <property name="checkoutTimeout" value="5000"/>  
        <property name="maxIdleTime" value="1800"/>  
        <property name="idleConnectionTestPeriod" value="3000"/>  
        <property name="acquireIncrement" value="3"/>  
    </bean>  
    -->
	<!-- 弃用DBCP、C3P0、BoneCP、Proxool、JBoss DataSource，使用阿里巴巴的Druid -->
	<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource"
		init-method="init" destroy-method="close">
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.username}" />
		<!-- 配置对数据库密码加密 -->
		<!--<property name="connectionProperties" value="config.decrypt=true" />-->
		<property name="password" value="${jdbc.password}" />
		<property name="filters" value="stat" />
		<property name="maxActive" value="20" />
		<property name="initialSize" value="1" />
		<property name="maxWait" value="60000" />
		<property name="minIdle" value="1" />
		<property name="timeBetweenEvictionRunsMillis" value="3000" />
		<property name="minEvictableIdleTimeMillis" value="300000" />
		<property name="validationQuery" value="SELECT 'x'" />
		<property name="testWhileIdle" value="true" />
		<property name="testOnBorrow" value="false" />
		<property name="testOnReturn" value="false" />
		<property name="poolPreparedStatements" value="true" />
		<property name="maxPoolPreparedStatementPerConnectionSize"
			value="20" />
	</bean>
	<!-- 2. mybatis 的 SqlSession 的工厂: SqlSessionFactoryBean -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<!-- 可用可不用 -->
<!-- 		<property name="configLocation" value="classpath:mybatis-config.xml" /> -->
		<!-- 指定mapping.xml文件位置，否则必须让mapping.xml位置必须和dao的接口类必须在一个文件 -->
		<property name="mapperLocations" value="classpath:mybatis/*Mapper.xml" />
		<!-- 定义别名，省去在mapping.xml引用时候指定全名 -->
		<property name="typeAliasesPackage" value="com.github.lynzabo.testmybatis.model" />
	</bean>
	<!-- 3. mybatis 自动扫描加载 Sql 映射文件 : MapperScannerConfigurer -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.github.lynzabo.testmybatis.dao" />
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" />
	</bean>
	<!-- 4. 事务管理 : DataSourceTransactionManager -->
	<bean id="txManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>
	<!-- 5. 使用声明式事务 -->
	<tx:annotation-driven transaction-manager="txManager" />
</beans>